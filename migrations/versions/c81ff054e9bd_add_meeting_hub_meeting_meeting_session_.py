"""Add meeting hub, meeting, meeting session, action item models and update recording model

Revision ID: c81ff054e9bd
Revises: 8ea2d844a437
Create Date: 2024-08-17 19:19:13.521101

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c81ff054e9bd'
down_revision = '8ea2d844a437'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('meeting_hub',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('meeting_hub_id', sa.Integer(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_hub_id'], ['meeting_hub.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_meeting_hub',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('meeting_hub_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_hub_id'], ['meeting_hub.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'meeting_hub_id')
    )
    op.create_table('meeting_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_datetime', sa.DateTime(), nullable=False),
    sa.Column('agenda', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('meeting_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('action_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('assigned_to', sa.String(length=128), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('meeting_session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_session_id'], ['meeting_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Add the new column with nullable=True initially
    with op.batch_alter_table('recording', schema=None) as batch_op:
        batch_op.add_column(sa.Column('meeting_session_id', sa.Integer(), nullable=True))
    
    # Create a placeholder company, meeting hub, meeting, and meeting session (or use existing ones)
    op.execute("""
    INSERT INTO company (id, name, address, city, state, zip_code, country, phone_number) 
    VALUES (1, 'Placeholder Company', '123 Placeholder St', 'Placeholder City', 'State', '12345', 'Country', '123-456-7890')
    ON CONFLICT (id) DO NOTHING
    """)

    op.execute("""
    INSERT INTO meeting_hub (id, name, description, company_id) 
    VALUES (1, 'Placeholder Hub', 'Placeholder Description', 1)
    ON CONFLICT (id) DO NOTHING
    """)
    
    op.execute("""
    INSERT INTO meeting (id, name, description, meeting_hub_id, is_recurring) 
    VALUES (1, 'Placeholder Meeting', 'Placeholder Description', 1, FALSE)
    ON CONFLICT (id) DO NOTHING
    """)
    
    op.execute("""
    INSERT INTO meeting_session (id, session_datetime, agenda, notes, meeting_id) 
    VALUES (1, NOW(), 'Placeholder agenda', 'Placeholder notes', 1)
    ON CONFLICT (id) DO NOTHING
    """)

    # Ensure all existing records have a valid meeting_session_id
    op.execute("UPDATE recording SET meeting_session_id = 1 WHERE meeting_session_id IS NULL")

    # Now make the columns NOT NULL
    with op.batch_alter_table('recording', schema=None) as batch_op:
        batch_op.alter_column('meeting_session_id', nullable=False)
        batch_op.create_unique_constraint(None, ['id'])
        batch_op.create_foreign_key(None, 'meeting_session', ['meeting_session_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recording', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('meeting_session_id')

    op.drop_table('action_item')
    op.drop_table('meeting_session')
    op.drop_table('user_meeting_hub')
    op.drop_table('meeting')
    op.drop_table('meeting_hub')
    # ### end Alembic commands ###