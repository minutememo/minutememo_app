{"ast":null,"code":"var _jsxFileName = \"/Users/gaetanbuelinckx/minutememo_app/frontend/src/AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useCallback, useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles.css';\nimport { RecorderContext } from './RecorderContext';\nimport { useUser } from './UserContext';\nimport { FormControl } from 'react-bootstrap'; // Add this line\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true; // Ensure credentials are included with every axios request\n\nconst AudioRecorder = ({\n  selectedHub,\n  setSelectedHub\n}) => {\n  _s();\n  // Accept selectedHub as a prop\n  const {\n    user\n  } = useUser(); // Get user from context\n  const {\n    recording,\n    setRecording,\n    mediaRecorderRef,\n    audioChunksRef,\n    canvasRef,\n    audioCtxRef,\n    sourceRef,\n    animationFrameIdRef,\n    chunkNumberRef,\n    recordingIdRef,\n    streamRef,\n    stopRef,\n    meetingSessionId // Add meetingSessionId to context\n  } = useContext(RecorderContext);\n  const [meetingName, setMeetingName] = useState(\"\");\n  const draw = useCallback(array => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    const barWidth = 10;\n    const barSpacing = 2;\n    const topRoundness = 2;\n    const bottomRoundness = 2;\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = '#18A04F';\n    for (let i = 0; i < array.length; i++) {\n      const barHeight = array[i] / 2;\n      const x = i * (barWidth + barSpacing);\n      const y = height - barHeight;\n      ctx.beginPath();\n      ctx.moveTo(x, y + topRoundness);\n      ctx.quadraticCurveTo(x, y, x + topRoundness, y);\n      ctx.lineTo(x + barWidth - topRoundness, y);\n      ctx.quadraticCurveTo(x + barWidth, y, x + barWidth, y + topRoundness);\n      ctx.lineTo(x + barWidth, y + barHeight - bottomRoundness);\n      ctx.quadraticCurveTo(x + barWidth, y + barHeight, x + barWidth - bottomRoundness, y + barHeight);\n      ctx.lineTo(x + bottomRoundness, y + barHeight);\n      ctx.quadraticCurveTo(x, y + barHeight, x, y + barHeight - bottomRoundness);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }, [canvasRef]);\n  useEffect(() => {\n    if (!recording) return;\n    const visualize = () => {\n      if (!sourceRef.current) return;\n      const analyser = audioCtxRef.current.createAnalyser();\n      analyser.fftSize = 256;\n      sourceRef.current.connect(analyser);\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      const drawVisualizer = () => {\n        analyser.getByteFrequencyData(dataArray);\n        draw(dataArray);\n        animationFrameIdRef.current = requestAnimationFrame(drawVisualizer);\n      };\n      drawVisualizer();\n      return () => cancelAnimationFrame(animationFrameIdRef.current);\n    };\n    visualize();\n  }, [recording, audioCtxRef, sourceRef, draw, animationFrameIdRef]);\n  const startRecording = async () => {\n    console.log(\"Attempting to start recording...\");\n    console.log(\"Meeting Name:\", meetingName);\n    console.log(\"Selected Hub:\", selectedHub);\n\n    // Check if the meeting name is provided\n    if (!meetingName) {\n      console.error(\"No meeting name provided. Please enter a meeting name before starting the recording.\");\n      alert(\"Please enter a meeting name before starting the recording.\");\n      return;\n    }\n\n    // If selectedHub is not defined, attempt to fetch it using the same logic as in fetchMeetingHubs\n    if (!selectedHub) {\n      console.warn(\"No selected hub found. Attempting to fetch active hub ID...\");\n      try {\n        const response = await axios.get('http://localhost:5000/api/meetinghubs');\n        console.log('API response received:', response);\n        if (response.status === 200) {\n          const hubs = response.data.meeting_hubs || [];\n          console.log('Fetched meeting hubs:', hubs);\n          if (hubs.length > 0) {\n            var _hubs$;\n            const activeHubId = parseInt(response.data.active_hub_id, 10) || ((_hubs$ = hubs[0]) === null || _hubs$ === void 0 ? void 0 : _hubs$.id);\n            console.log('Active Hub ID from API:', activeHubId);\n\n            // Set the active hub in state\n            setSelectedHub(activeHubId);\n            console.log('Selected hub state updated:', activeHubId);\n            if (!activeHubId) {\n              console.error(\"No active hub found. Please select a meeting hub before starting the recording.\");\n              alert(\"Please select a meeting hub before starting the recording.\");\n              return;\n            }\n          } else {\n            console.error(\"No meeting hubs found. Cannot proceed with recording.\");\n            alert(\"No meeting hubs found. Please create or select a hub before starting the recording.\");\n            return;\n          }\n        } else {\n          console.error('Unexpected response status:', response.status);\n          alert(\"Unexpected error occurred while fetching meeting hubs.\");\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching meeting hubs:', err);\n        alert(\"An error occurred while fetching meeting hubs. Please try again.\");\n        return;\n      }\n    }\n\n    // Initialize recording session\n    recordingIdRef.current = uuidv4();\n    chunkNumberRef.current = 0; // Reset chunk number\n\n    try {\n      // Log the hub ID being used for the request\n      console.log('Using Selected Hub ID:', selectedHub);\n\n      // Create the meeting and meeting session\n      const meetingResponse = await axios.post('http://localhost:5000/api/meetings', {\n        name: meetingName,\n        hub_id: selectedHub\n      });\n      console.log('Meeting and session creation response:', meetingResponse);\n      const meetingSessionId = meetingResponse.data.meeting_session_id;\n      console.log('Created Meeting Session ID:', meetingSessionId);\n      const response = await axios.post('http://localhost:5000/api/recordings', {\n        recording_id: recordingIdRef.current,\n        file_name: `${recordingIdRef.current}.webm`,\n        concatenation_status: 'pending',\n        concatenation_file_name: `${recordingIdRef.current}_list.txt`,\n        meeting_session_id: meetingSessionId\n      });\n      console.log('Recording entry creation response:', response);\n      if (response.status === 201) {\n        console.log('Recording entry successfully created in the database.');\n        navigator.mediaDevices.getUserMedia({\n          audio: true\n        }).then(stream => {\n          audioCtxRef.current = new (window.AudioContext || window.webkitAudioContext)();\n          sourceRef.current = audioCtxRef.current.createMediaStreamSource(stream);\n          streamRef.current = stream;\n          stopRef.current = false; // Reset stop flag\n          startNewChunk();\n          setRecording(true);\n          console.log('Recording started successfully.');\n        });\n      } else {\n        console.error('Failed to create recording entry in the database.');\n      }\n    } catch (error) {\n      console.error('Error encountered while creating recording entry in the database:', error);\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        console.error('Response headers:', error.response.headers);\n      }\n    }\n  };\n  const startNewChunk = () => {\n    if (stopRef.current) return; // Don't start new chunk if stopping\n\n    mediaRecorderRef.current = new MediaRecorder(streamRef.current);\n    mediaRecorderRef.current.ondataavailable = event => {\n      audioChunksRef.current.push(event.data);\n      if (mediaRecorderRef.current.state === 'recording') {\n        uploadChunk(event.data);\n        mediaRecorderRef.current.stop();\n      }\n    };\n    mediaRecorderRef.current.onstop = () => {\n      if (!stopRef.current) {\n        setTimeout(startNewChunk, 0); // Delay for next chunk to ensure the current one is processed\n      }\n    };\n    mediaRecorderRef.current.start(5000); // Record in 5-second intervals\n  };\n  const uploadChunk = chunk => {\n    const formData = new FormData();\n    formData.append('chunk', chunk, `chunk_${chunkNumberRef.current}.webm`);\n    formData.append('chunk_number', chunkNumberRef.current);\n    formData.append('recording_id', recordingIdRef.current);\n    chunkNumberRef.current++;\n    axios.post('http://localhost:5000/upload_chunk', formData).then(response => {\n      console.log(`Chunk ${chunkNumberRef.current - 1} uploaded successfully`);\n    }).catch(error => {\n      console.error(`Error uploading chunk ${chunkNumberRef.current - 1}:`, error);\n    });\n  };\n  const concatenateChunks = async () => {\n    try {\n      // Log the start of the concatenation process\n      console.log('Starting concatenation for recording ID:', recordingIdRef.current);\n\n      // Send request to concatenate chunks\n      const response = await axios.post('http://localhost:5000/concatenate', {\n        recording_id: recordingIdRef.current\n      });\n      if (response.status === 200) {\n        const audioUrl = response.data.file_url;\n        console.log('Concatenation successful. Audio file URL:', audioUrl);\n\n        // Log the PATCH request to update the recording with the audio_url\n        console.log(`Updating recording ${recordingIdRef.current} with audio URL: ${audioUrl}`);\n        await axios.patch(`http://localhost:5000/api/recordings/${recordingIdRef.current}`, {\n          audio_url: audioUrl\n        });\n        console.log('Audio URL successfully stored in the database');\n      } else {\n        console.error('Concatenation failed. Message:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error during concatenation or updating the recording:', error);\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        console.error('Response headers:', error.response.headers);\n      }\n    }\n  };\n  const stopRecording = () => {\n    stopRef.current = true; // Set stop flag\n    setRecording(false);\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    if (audioCtxRef.current) {\n      audioCtxRef.current.close();\n    }\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    cancelAnimationFrame(animationFrameIdRef.current);\n    concatenateChunks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Recorder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      type: \"text\",\n      placeholder: \"Enter meeting name\",\n      value: meetingName,\n      onChange: e => setMeetingName(e.target.value),\n      disabled: recording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        disabled: recording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        disabled: !recording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualizer\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"300\",\n        height: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"kL53cCikPMSQS3ES0avyGMzLfSk=\", false, function () {\n  return [useUser];\n});\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useContext","useEffect","useCallback","useState","axios","v4","uuidv4","RecorderContext","useUser","FormControl","jsxDEV","_jsxDEV","defaults","withCredentials","AudioRecorder","selectedHub","setSelectedHub","_s","user","recording","setRecording","mediaRecorderRef","audioChunksRef","canvasRef","audioCtxRef","sourceRef","animationFrameIdRef","chunkNumberRef","recordingIdRef","streamRef","stopRef","meetingSessionId","meetingName","setMeetingName","draw","array","canvas","current","ctx","getContext","width","height","barWidth","barSpacing","topRoundness","bottomRoundness","clearRect","fillStyle","i","length","barHeight","x","y","beginPath","moveTo","quadraticCurveTo","lineTo","closePath","fill","visualize","analyser","createAnalyser","fftSize","connect","bufferLength","frequencyBinCount","dataArray","Uint8Array","drawVisualizer","getByteFrequencyData","requestAnimationFrame","cancelAnimationFrame","startRecording","console","log","error","alert","warn","response","get","status","hubs","data","meeting_hubs","_hubs$","activeHubId","parseInt","active_hub_id","id","err","meetingResponse","post","name","hub_id","meeting_session_id","recording_id","file_name","concatenation_status","concatenation_file_name","navigator","mediaDevices","getUserMedia","audio","then","stream","window","AudioContext","webkitAudioContext","createMediaStreamSource","startNewChunk","headers","MediaRecorder","ondataavailable","event","push","state","uploadChunk","stop","onstop","setTimeout","start","chunk","formData","FormData","append","catch","concatenateChunks","audioUrl","file_url","patch","audio_url","message","stopRecording","close","getTracks","forEach","track","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","disabled","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/gaetanbuelinckx/minutememo_app/frontend/src/AudioRecorder.js"],"sourcesContent":["import React, { useContext, useEffect, useCallback, useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles.css';\nimport { RecorderContext } from './RecorderContext';\nimport { useUser } from './UserContext';\nimport { FormControl } from 'react-bootstrap'; // Add this line\n\naxios.defaults.withCredentials = true; // Ensure credentials are included with every axios request\n\nconst AudioRecorder = ({ selectedHub, setSelectedHub }) => {  // Accept selectedHub as a prop\n  const { user } = useUser(); // Get user from context\n  const {\n    recording, setRecording, mediaRecorderRef, audioChunksRef,\n    canvasRef, audioCtxRef, sourceRef, animationFrameIdRef, chunkNumberRef,\n    recordingIdRef, streamRef, stopRef, meetingSessionId // Add meetingSessionId to context\n  } = useContext(RecorderContext);\n  const [meetingName, setMeetingName] = useState(\"\");\n\n  const draw = useCallback((array) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    const barWidth = 10;\n    const barSpacing = 2;\n    const topRoundness = 2;\n    const bottomRoundness = 2;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = '#18A04F';\n\n    for (let i = 0; i < array.length; i++) {\n      const barHeight = array[i] / 2;\n      const x = i * (barWidth + barSpacing);\n      const y = height - barHeight;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y + topRoundness);\n      ctx.quadraticCurveTo(x, y, x + topRoundness, y);\n      ctx.lineTo(x + barWidth - topRoundness, y);\n      ctx.quadraticCurveTo(x + barWidth, y, x + barWidth, y + topRoundness);\n      ctx.lineTo(x + barWidth, y + barHeight - bottomRoundness);\n      ctx.quadraticCurveTo(x + barWidth, y + barHeight, x + barWidth - bottomRoundness, y + barHeight);\n      ctx.lineTo(x + bottomRoundness, y + barHeight);\n      ctx.quadraticCurveTo(x, y + barHeight, x, y + barHeight - bottomRoundness);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }, [canvasRef]);\n\n  useEffect(() => {\n    if (!recording) return;\n\n    const visualize = () => {\n      if (!sourceRef.current) return;\n\n      const analyser = audioCtxRef.current.createAnalyser();\n      analyser.fftSize = 256;\n      sourceRef.current.connect(analyser);\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n\n      const drawVisualizer = () => {\n        analyser.getByteFrequencyData(dataArray);\n        draw(dataArray);\n        animationFrameIdRef.current = requestAnimationFrame(drawVisualizer);\n      };\n\n      drawVisualizer();\n\n      return () => cancelAnimationFrame(animationFrameIdRef.current);\n    };\n\n    visualize();\n  }, [recording, audioCtxRef, sourceRef, draw, animationFrameIdRef]);\n\n  const startRecording = async () => {\n    console.log(\"Attempting to start recording...\");\n    console.log(\"Meeting Name:\", meetingName);\n    console.log(\"Selected Hub:\", selectedHub);\n  \n    // Check if the meeting name is provided\n    if (!meetingName) {\n      console.error(\"No meeting name provided. Please enter a meeting name before starting the recording.\");\n      alert(\"Please enter a meeting name before starting the recording.\");\n      return;\n    }\n  \n    // If selectedHub is not defined, attempt to fetch it using the same logic as in fetchMeetingHubs\n    if (!selectedHub) {\n      console.warn(\"No selected hub found. Attempting to fetch active hub ID...\");\n      \n      try {\n        const response = await axios.get('http://localhost:5000/api/meetinghubs');\n        console.log('API response received:', response);\n  \n        if (response.status === 200) {\n          const hubs = response.data.meeting_hubs || [];\n          console.log('Fetched meeting hubs:', hubs);\n  \n          if (hubs.length > 0) {\n            const activeHubId = parseInt(response.data.active_hub_id, 10) || hubs[0]?.id;\n            console.log('Active Hub ID from API:', activeHubId);\n  \n            // Set the active hub in state\n            setSelectedHub(activeHubId);\n            console.log('Selected hub state updated:', activeHubId);\n  \n            if (!activeHubId) {\n              console.error(\"No active hub found. Please select a meeting hub before starting the recording.\");\n              alert(\"Please select a meeting hub before starting the recording.\");\n              return;\n            }\n          } else {\n            console.error(\"No meeting hubs found. Cannot proceed with recording.\");\n            alert(\"No meeting hubs found. Please create or select a hub before starting the recording.\");\n            return;\n          }\n        } else {\n          console.error('Unexpected response status:', response.status);\n          alert(\"Unexpected error occurred while fetching meeting hubs.\");\n          return;\n        }\n      } catch (err) {\n        console.error('Error fetching meeting hubs:', err);\n        alert(\"An error occurred while fetching meeting hubs. Please try again.\");\n        return;\n      }\n    }\n  \n    // Initialize recording session\n    recordingIdRef.current = uuidv4();\n    chunkNumberRef.current = 0; // Reset chunk number\n  \n    try {\n      // Log the hub ID being used for the request\n      console.log('Using Selected Hub ID:', selectedHub);\n  \n      // Create the meeting and meeting session\n      const meetingResponse = await axios.post('http://localhost:5000/api/meetings', {\n        name: meetingName,\n        hub_id: selectedHub,\n      });\n  \n      console.log('Meeting and session creation response:', meetingResponse);\n  \n      const meetingSessionId = meetingResponse.data.meeting_session_id;\n      console.log('Created Meeting Session ID:', meetingSessionId);\n  \n      const response = await axios.post('http://localhost:5000/api/recordings', {\n        recording_id: recordingIdRef.current,\n        file_name: `${recordingIdRef.current}.webm`,\n        concatenation_status: 'pending',\n        concatenation_file_name: `${recordingIdRef.current}_list.txt`,\n        meeting_session_id: meetingSessionId,\n      });\n  \n      console.log('Recording entry creation response:', response);\n  \n      if (response.status === 201) {\n        console.log('Recording entry successfully created in the database.');\n  \n        navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n          audioCtxRef.current = new (window.AudioContext || window.webkitAudioContext)();\n          sourceRef.current = audioCtxRef.current.createMediaStreamSource(stream);\n          streamRef.current = stream;\n          stopRef.current = false; // Reset stop flag\n          startNewChunk();\n  \n          setRecording(true);\n          console.log('Recording started successfully.');\n        });\n      } else {\n        console.error('Failed to create recording entry in the database.');\n      }\n    } catch (error) {\n      console.error('Error encountered while creating recording entry in the database:', error);\n  \n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        console.error('Response headers:', error.response.headers);\n      }\n    }\n  };\n\n  const startNewChunk = () => {\n    if (stopRef.current) return; // Don't start new chunk if stopping\n\n    mediaRecorderRef.current = new MediaRecorder(streamRef.current);\n\n    mediaRecorderRef.current.ondataavailable = event => {\n      audioChunksRef.current.push(event.data);\n      if (mediaRecorderRef.current.state === 'recording') {\n        uploadChunk(event.data);\n        mediaRecorderRef.current.stop();\n      }\n    };\n\n    mediaRecorderRef.current.onstop = () => {\n      if (!stopRef.current) {\n        setTimeout(startNewChunk, 0); // Delay for next chunk to ensure the current one is processed\n      }\n    };\n\n    mediaRecorderRef.current.start(5000); // Record in 5-second intervals\n  };\n\n  const uploadChunk = (chunk) => {\n    const formData = new FormData();\n    formData.append('chunk', chunk, `chunk_${chunkNumberRef.current}.webm`);\n    formData.append('chunk_number', chunkNumberRef.current);\n    formData.append('recording_id', recordingIdRef.current);\n    chunkNumberRef.current++;\n\n    axios.post('http://localhost:5000/upload_chunk', formData)\n      .then(response => {\n        console.log(`Chunk ${chunkNumberRef.current - 1} uploaded successfully`);\n      })\n      .catch(error => {\n        console.error(`Error uploading chunk ${chunkNumberRef.current - 1}:`, error);\n      });\n  };\n\n  const concatenateChunks = async () => {\n    try {\n        // Log the start of the concatenation process\n        console.log('Starting concatenation for recording ID:', recordingIdRef.current);\n\n        // Send request to concatenate chunks\n        const response = await axios.post('http://localhost:5000/concatenate', {\n            recording_id: recordingIdRef.current,\n        });\n\n        if (response.status === 200) {\n            const audioUrl = response.data.file_url;\n            console.log('Concatenation successful. Audio file URL:', audioUrl);\n\n            // Log the PATCH request to update the recording with the audio_url\n            console.log(`Updating recording ${recordingIdRef.current} with audio URL: ${audioUrl}`);\n            await axios.patch(`http://localhost:5000/api/recordings/${recordingIdRef.current}`, {\n                audio_url: audioUrl,\n            });\n\n            console.log('Audio URL successfully stored in the database');\n        } else {\n            console.error('Concatenation failed. Message:', response.data.message);\n        }\n    } catch (error) {\n        console.error('Error during concatenation or updating the recording:', error);\n\n        if (error.response) {\n            console.error('Response data:', error.response.data);\n            console.error('Response status:', error.response.status);\n            console.error('Response headers:', error.response.headers);\n        }\n    }\n};\n\n  const stopRecording = () => {\n    stopRef.current = true; // Set stop flag\n    setRecording(false);\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    if (audioCtxRef.current) {\n      audioCtxRef.current.close();\n    }\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n    }\n    cancelAnimationFrame(animationFrameIdRef.current);\n\n    concatenateChunks();\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <h1>Audio Recorder</h1>\n      <FormControl\n        type=\"text\"\n        placeholder=\"Enter meeting name\"\n        value={meetingName}\n        onChange={(e) => setMeetingName(e.target.value)}\n        disabled={recording}\n      />\n      <div className=\"controls\">\n        <button onClick={startRecording} disabled={recording}>Start Recording</button>\n        <button onClick={stopRecording} disabled={!recording}>Stop Recording</button>\n      </div>\n      {recording && (\n        <div className=\"visualizer\">\n          <canvas ref={canvasRef} width=\"300\" height=\"100\"></canvas>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}